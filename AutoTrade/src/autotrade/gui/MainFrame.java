/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainFrame.java
 *
 * Created on Feb 11, 2011, 9:56:00 PM
 */
package autotrade.gui;

import javax.swing.JSpinner;
import javax.swing.JTextField;
import autotrade.core.*;
import autotrade.core.database.AutoTradeDatabaseManagement;
import autotrade.gui.panel.ImportDataPanel;
import autotrade.gui.panel.NewUserPanel;
import autotrade.gui.panel.SettingPanel;
import java.awt.Color;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.sql.*;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDialog;
import javax.swing.SpinnerDateModel;
import javax.swing.table.DefaultTableModel;
import org.jfree.data.xy.*;
import org.jfree.chart.*;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.labels.StandardXYToolTipGenerator;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.StandardXYBarPainter;
import org.jfree.chart.renderer.xy.XYBarRenderer;
import org.jfree.chart.renderer.xy.XYItemRenderer;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;

/**
 *
 * @author Dinh
 */
public class MainFrame extends javax.swing.JFrame {

    public JDialog newUserDialog;
    public JDialog settingDialog;
    public JDialog importFileDialog;
    DateFormat dateFormat = new SimpleDateFormat("MM-dd-yyyy");
    Calendar calendar = Calendar.getInstance();

    /** Creates new form MainFrame */
    public MainFrame() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainJTabbedPane = new javax.swing.JTabbedPane();
        transactionJPanel = new javax.swing.JPanel();
        chartJPanel = new javax.swing.JPanel();
        symbolJLabel = new javax.swing.JLabel();
        symbolJComboBox = new javax.swing.JComboBox();
        openPriceJLabel = new javax.swing.JLabel();
        openPriceJTextField = new javax.swing.JTextField();
        highPriceJLabel = new javax.swing.JLabel();
        highPriceJTextField = new javax.swing.JTextField();
        lowPriceJLabel = new javax.swing.JLabel();
        lowPriceJTextField = new javax.swing.JTextField();
        closePriceJLabel = new javax.swing.JLabel();
        closePriceJTextField = new javax.swing.JTextField();
        volumeJLabel = new javax.swing.JLabel();
        volumeJTextField = new javax.swing.JTextField();
        final XYDataset priceDataset = createPriceDataset(AutoTradeLocalData.load().getCenter_date().getTime(),AutoTradeLocalData.load().getCurrentDate().getTime(), null, "close");
        final XYDataset volumeDataset = createVolumeDataset(AutoTradeLocalData.load().getCenter_date().getTime(),AutoTradeLocalData.load().getCurrentDate().getTime(), null);
        final JFreeChart chart = createPriceVolumeChart(priceDataset, volumeDataset);
        priceVolumeChartJPanel = new ChartPanel(chart);
        priceTypeJLabel = new javax.swing.JLabel();
        priceTypeJComboBox = new javax.swing.JComboBox();
        numberOfDayJLabel = new javax.swing.JLabel();
        numberOfDayJSpinner = new javax.swing.JSpinner();
        dateJSpinner = new javax.swing.JSpinner();
        dateJLabel = new javax.swing.JLabel();
        AccountInfoJPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        userJComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        dateJPanel = new javax.swing.JPanel();
        nextYearJButton = new javax.swing.JButton();
        nextMonthJButton = new javax.swing.JButton();
        nextDayJButton = new javax.swing.JButton();
        currentDateJLabel = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        userManagementJPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        newJButton = new javax.swing.JButton();
        removeJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listUserJTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jMenuBar = new javax.swing.JMenuBar();
        editJMenu = new javax.swing.JMenu();
        settingJMenuItem = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        symbolJLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        symbolJLabel.setText("Symbol:");

        symbolJComboBox.setEditable(true);
        symbolJComboBox.setModel(new javax.swing.DefaultComboBoxModel(autotrade.core.AutoTrade.LIST_ALL_JSC_SYMBOL.toArray()));
        JTextField field = (JTextField)symbolJComboBox.getEditor().getEditorComponent();
        field.setText("");
        field.addKeyListener(new ComboKeyHandler(symbolJComboBox));
        symbolJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                symbolJComboBoxActionPerformed(evt);
            }
        });

        openPriceJLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        openPriceJLabel.setText("Open:");

        openPriceJTextField.setEditable(false);
        openPriceJTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        highPriceJLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        highPriceJLabel.setText("High:");

        highPriceJTextField.setEditable(false);
        highPriceJTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        lowPriceJLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        lowPriceJLabel.setText("Low:");

        lowPriceJTextField.setEditable(false);
        lowPriceJTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        closePriceJLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        closePriceJLabel.setText("Close:");

        closePriceJTextField.setEditable(false);
        closePriceJTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        volumeJLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        volumeJLabel.setText("Volume:");

        volumeJTextField.setEditable(false);
        volumeJTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        javax.swing.GroupLayout priceVolumeChartJPanelLayout = new javax.swing.GroupLayout(priceVolumeChartJPanel);
        priceVolumeChartJPanel.setLayout(priceVolumeChartJPanelLayout);
        priceVolumeChartJPanelLayout.setHorizontalGroup(
            priceVolumeChartJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 652, Short.MAX_VALUE)
        );
        priceVolumeChartJPanelLayout.setVerticalGroup(
            priceVolumeChartJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 566, Short.MAX_VALUE)
        );

        priceTypeJLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        priceTypeJLabel.setText("Price Type:");

        priceTypeJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Open", "High", "Low", "Close" }));
        priceTypeJComboBox.setSelectedIndex(3);
        priceTypeJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceTypeJComboBoxActionPerformed(evt);
            }
        });

        numberOfDayJLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        numberOfDayJLabel.setText("Number of day:");

        numberOfDayJSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(AutoTradeLocalData.load().getNumber_of_day()), Integer.valueOf(0), null, Integer.valueOf(1)));
        numberOfDayJSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                numberOfDayJSpinnerStateChanged(evt);
            }
        });

        Date earliestDate = new Date(AutoTrade.earliestTime);
        Date latestDate = new Date(AutoTrade.latestTime);
        dateJSpinner.setModel(new javax.swing.SpinnerDateModel(AutoTradeLocalData.load().getCenter_date(), earliestDate, latestDate, Calendar.DAY_OF_MONTH));
        dateJSpinner.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        dateJSpinner.setEditor(new JSpinner.DateEditor(dateJSpinner, "MM/dd/yyyy"));
        dateJSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                dateJSpinnerStateChanged(evt);
            }
        });

        dateJLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        dateJLabel.setText("Center Date:");

        javax.swing.GroupLayout chartJPanelLayout = new javax.swing.GroupLayout(chartJPanel);
        chartJPanel.setLayout(chartJPanelLayout);
        chartJPanelLayout.setHorizontalGroup(
            chartJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chartJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(chartJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(symbolJLabel)
                    .addComponent(priceTypeJLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(chartJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(symbolJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priceTypeJComboBox, 0, 83, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(chartJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(chartJPanelLayout.createSequentialGroup()
                        .addComponent(openPriceJLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(openPriceJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(highPriceJLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(highPriceJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lowPriceJLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lowPriceJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(closePriceJLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(closePriceJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(volumeJLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(volumeJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(chartJPanelLayout.createSequentialGroup()
                        .addComponent(numberOfDayJLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numberOfDayJSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dateJLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateJSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
            .addComponent(priceVolumeChartJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        chartJPanelLayout.setVerticalGroup(
            chartJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chartJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(chartJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(symbolJLabel)
                    .addComponent(openPriceJLabel)
                    .addComponent(openPriceJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(highPriceJLabel)
                    .addComponent(highPriceJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lowPriceJLabel)
                    .addComponent(lowPriceJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(closePriceJLabel)
                    .addComponent(closePriceJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(volumeJLabel)
                    .addComponent(volumeJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(symbolJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(chartJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priceTypeJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numberOfDayJLabel)
                    .addComponent(numberOfDayJSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priceTypeJLabel)
                    .addComponent(dateJSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateJLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(priceVolumeChartJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel2.setText("User");

        ArrayList<String> listUserName = new ArrayList<String>();
        for (int i = 0; i < AutoTrade.LIST_ALL_USER.size(); ++i) {
            if (AutoTrade.LIST_ALL_USER.get(i).isActive()) {
                listUserName.add(AutoTrade.LIST_ALL_USER.get(i).getUserName());
            }
        }
        userJComboBox.setModel(new javax.swing.DefaultComboBoxModel(listUserName.toArray()));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel3.setText("Cash Remain");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 10));
        jLabel5.setText("x1000 VND");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel6.setText("User Portfolio");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Symbol", "Volume", "Buy Price", "Current Price", "Gain/Loss"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Long.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel7.setText("Gain/Loss");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel9.setText("Buy stocks");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel10.setText("Sell stocks");

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Symbol", "Price", "Volume", "Value"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Long.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable3);

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Symbol", "Price", "Volume", "Value"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Long.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jTable5);

        javax.swing.GroupLayout AccountInfoJPanelLayout = new javax.swing.GroupLayout(AccountInfoJPanel);
        AccountInfoJPanel.setLayout(AccountInfoJPanelLayout);
        AccountInfoJPanelLayout.setHorizontalGroup(
            AccountInfoJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AccountInfoJPanelLayout.createSequentialGroup()
                .addGroup(AccountInfoJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, AccountInfoJPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, AccountInfoJPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, AccountInfoJPanelLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(AccountInfoJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE)
                            .addGroup(AccountInfoJPanelLayout.createSequentialGroup()
                                .addGroup(AccountInfoJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(AccountInfoJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(userJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AccountInfoJPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel5)))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
                            .addGroup(AccountInfoJPanelLayout.createSequentialGroup()
                                .addGroup(AccountInfoJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 338, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        AccountInfoJPanelLayout.setVerticalGroup(
            AccountInfoJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AccountInfoJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AccountInfoJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(AccountInfoJPanelLayout.createSequentialGroup()
                        .addGroup(AccountInfoJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(userJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(AccountInfoJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addGroup(AccountInfoJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(jLabel7))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addGap(7, 7, 7)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE))
        );

        nextYearJButton.setText("Next Year");
        nextYearJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextYearJButtonActionPerformed(evt);
            }
        });

        nextMonthJButton.setText("Next Month");
        nextMonthJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextMonthJButtonActionPerformed(evt);
            }
        });

        nextDayJButton.setText("Next Day");
        nextDayJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextDayJButtonActionPerformed(evt);
            }
        });

        currentDateJLabel.setText(dateFormat.format(AutoTradeLocalData.load().getCurrentDate()));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel12.setText("Current Date: ");

        javax.swing.GroupLayout dateJPanelLayout = new javax.swing.GroupLayout(dateJPanel);
        dateJPanel.setLayout(dateJPanelLayout);
        dateJPanelLayout.setHorizontalGroup(
            dateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dateJPanelLayout.createSequentialGroup()
                .addContainerGap(647, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(currentDateJLabel)
                .addGap(18, 18, 18)
                .addComponent(nextDayJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nextMonthJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nextYearJButton)
                .addContainerGap())
        );
        dateJPanelLayout.setVerticalGroup(
            dateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dateJPanelLayout.createSequentialGroup()
                .addGroup(dateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nextYearJButton)
                    .addComponent(nextMonthJButton)
                    .addComponent(nextDayJButton)
                    .addComponent(currentDateJLabel)
                    .addComponent(jLabel12))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout transactionJPanelLayout = new javax.swing.GroupLayout(transactionJPanel);
        transactionJPanel.setLayout(transactionJPanelLayout);
        transactionJPanelLayout.setHorizontalGroup(
            transactionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transactionJPanelLayout.createSequentialGroup()
                .addComponent(AccountInfoJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chartJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(dateJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        transactionJPanelLayout.setVerticalGroup(
            transactionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transactionJPanelLayout.createSequentialGroup()
                .addComponent(dateJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(transactionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(chartJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AccountInfoJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        mainJTabbedPane.addTab("Transaction", transactionJPanel);

        jLabel1.setText("List of existing Users");

        newJButton.setText("New");
        newJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newJButtonActionPerformed(evt);
            }
        });

        removeJButton.setText("Remove");
        removeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeJButtonActionPerformed(evt);
            }
        });

        Object[][] data = AutoTrade.getTableData();
        listUserJTable.setModel(new javax.swing.table.DefaultTableModel(
            data,
            new String [] {
                "User ID", "User Name", "User Type", "Technical Analysis Method", "Cash Remain", "Active"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listUserJTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane1.setViewportView(listUserJTable);
        listUserJTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listUserJTable.getColumnModel().getColumn(0).setPreferredWidth(25);
        listUserJTable.getColumnModel().getColumn(1).setPreferredWidth(35);
        listUserJTable.getColumnModel().getColumn(2).setPreferredWidth(25);
        listUserJTable.getColumnModel().getColumn(3).setPreferredWidth(100);
        listUserJTable.getColumnModel().getColumn(4).setPreferredWidth(100);
        listUserJTable.getColumnModel().getColumn(5).setPreferredWidth(5);

        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Start");

        jButton3.setText("Stop");

        javax.swing.GroupLayout userManagementJPanelLayout = new javax.swing.GroupLayout(userManagementJPanel);
        userManagementJPanel.setLayout(userManagementJPanelLayout);
        userManagementJPanelLayout.setHorizontalGroup(
            userManagementJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userManagementJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(userManagementJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 962, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(userManagementJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(newJButton, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                    .addComponent(removeJButton, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE))
                .addContainerGap())
        );
        userManagementJPanelLayout.setVerticalGroup(
            userManagementJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userManagementJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(userManagementJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(userManagementJPanelLayout.createSequentialGroup()
                        .addComponent(newJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(removeJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(144, Short.MAX_VALUE))
        );

        mainJTabbedPane.addTab("User Management", userManagementJPanel);

        editJMenu.setText("Edit");

        settingJMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        settingJMenuItem.setText("Setting ...");
        settingJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingJMenuItemActionPerformed(evt);
            }
        });
        editJMenu.add(settingJMenuItem);

        jMenuBar.add(editJMenu);

        jMenu1.setText("Import");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Import From File");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jCheckBoxMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("Auto import from internet");
        jMenu1.add(jCheckBoxMenuItem1);

        jMenuBar.add(jMenu1);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainJTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1090, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainJTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 610, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        AutoTradeLocalData.load().saveAutoTradeLocalData();
    }//GEN-LAST:event_formWindowClosing

    private void newJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newJButtonActionPerformed
        newUserDialog = new JDialog();
        NewUserPanel panel = new NewUserPanel(this);
        newUserDialog.add(panel);
        newUserDialog.pack();
        newUserDialog.setVisible(true);
}//GEN-LAST:event_newJButtonActionPerformed

    private void nextDayJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextDayJButtonActionPerformed
        calendar.setTime(AutoTradeLocalData.load().getCurrentDate());
        calendar.add(Calendar.DAY_OF_MONTH, 1);
        if (calendar.getTimeInMillis() > AutoTrade.latestTime) {
            return;
        }

        AutoTradeLocalData.load().setCurrentDate(calendar.getTime());
        currentDateJLabel.setText(dateFormat.format(AutoTradeLocalData.load().getCurrentDate()));

        //update center date
        AutoTradeLocalData.load().setCenter_date(AutoTradeLocalData.load().getCurrentDate());
        SpinnerDateModel dateModel = (SpinnerDateModel) dateJSpinner.getModel();
        dateModel.setEnd(AutoTradeLocalData.load().getCurrentDate());
        dateJSpinner.setValue(AutoTradeLocalData.load().getCurrentDate());

        updatePriceAndVolume();
        updatePriceVolumeChart();
}//GEN-LAST:event_nextDayJButtonActionPerformed

    private void nextMonthJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextMonthJButtonActionPerformed
        calendar.setTime(AutoTradeLocalData.load().getCurrentDate());
        calendar.add(Calendar.MONTH, 1);
        if (calendar.getTimeInMillis() > AutoTrade.latestTime) {
            return;
        }

        AutoTradeLocalData.load().setCurrentDate(calendar.getTime());
        currentDateJLabel.setText(dateFormat.format(AutoTradeLocalData.load().getCurrentDate()));

        //update center date
        AutoTradeLocalData.load().setCenter_date(AutoTradeLocalData.load().getCurrentDate());
        SpinnerDateModel dateModel = (SpinnerDateModel) dateJSpinner.getModel();
        dateModel.setEnd(AutoTradeLocalData.load().getCurrentDate());
        dateJSpinner.setValue(AutoTradeLocalData.load().getCurrentDate());

        updatePriceAndVolume();
        updatePriceVolumeChart();

}//GEN-LAST:event_nextMonthJButtonActionPerformed

    private void nextYearJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextYearJButtonActionPerformed
        calendar.setTime(AutoTradeLocalData.load().getCurrentDate());
        calendar.add(Calendar.YEAR, 1);
        if (calendar.getTimeInMillis() > AutoTrade.latestTime) {
            return;
        }
        AutoTradeLocalData.load().setCurrentDate(calendar.getTime());
        currentDateJLabel.setText(dateFormat.format(AutoTradeLocalData.load().getCurrentDate()));

        //update center date
        AutoTradeLocalData.load().setCenter_date(AutoTradeLocalData.load().getCurrentDate());
        SpinnerDateModel dateModel = (SpinnerDateModel) dateJSpinner.getModel();
        dateModel.setEnd(AutoTradeLocalData.load().getCurrentDate());
        dateJSpinner.setValue(AutoTradeLocalData.load().getCurrentDate());

        updatePriceAndVolume();
        updatePriceVolumeChart();
    }//GEN-LAST:event_nextYearJButtonActionPerformed

    private void dateJSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_dateJSpinnerStateChanged
        Date centerDate = (Date) dateJSpinner.getValue();
        AutoTradeLocalData.load().setCenter_date(centerDate);
        //        ArrayList<String> listJSCSymbol = AutoTradeInfo.getAllJSCSymbolAtThisTime(currentDate);
        //        symbolJComboBox.setModel(new javax.swing.DefaultComboBoxModel(listJSCSymbol.toArray()));
        //        symbolJComboBox.setSelectedItem(symbol);

        updatePriceAndVolume();
        updatePriceVolumeChart();
    }//GEN-LAST:event_dateJSpinnerStateChanged

    private void numberOfDayJSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_numberOfDayJSpinnerStateChanged
        Integer time = (Integer) numberOfDayJSpinner.getValue();
        AutoTradeLocalData.load().setNumber_of_day(time.intValue());

        updatePriceVolumeChart();
}//GEN-LAST:event_numberOfDayJSpinnerStateChanged

    private void priceTypeJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceTypeJComboBoxActionPerformed
        updatePriceVolumeChart();
}//GEN-LAST:event_priceTypeJComboBoxActionPerformed

    private void symbolJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_symbolJComboBoxActionPerformed
        String symbol = (String) symbolJComboBox.getSelectedItem();
        AutoTradeLocalData.load().setSymbol(symbol);

        updatePriceAndVolume();
        updatePriceVolumeChart();
}//GEN-LAST:event_symbolJComboBoxActionPerformed

    private void settingJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingJMenuItemActionPerformed
        settingDialog = new JDialog();
        SettingPanel panel = new SettingPanel(this);
        settingDialog.add(panel);
        settingDialog.pack();
        settingDialog.setVisible(true);
    }//GEN-LAST:event_settingJMenuItemActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        importFileDialog = new JDialog();
        ImportDataPanel panel = new ImportDataPanel(this);
        importFileDialog.add(panel);
        importFileDialog.pack();
        importFileDialog.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void removeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeJButtonActionPerformed
        int removeIndex = listUserJTable.getSelectedRow();
        AutoTrade.removeUser(AutoTrade.LIST_ALL_USER.get(removeIndex).getUserID());
        AutoTrade.LIST_ALL_USER.remove(removeIndex);
        DefaultTableModel model = (DefaultTableModel) listUserJTable.getModel();
        model.removeRow(removeIndex);
        listUserJTable.repaint();

        DefaultComboBoxModel comboModel = (DefaultComboBoxModel) userJComboBox.getModel();
        comboModel.removeElementAt(removeIndex);
        userJComboBox.repaint();
    }//GEN-LAST:event_removeJButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        AutoTrade.LIST_ALL_USER = AutoTrade.getAllUsers();
        DefaultTableModel model = (DefaultTableModel) listUserJTable.getModel();
        model.setDataVector(AutoTrade.getTableData(), new String[]{
                    "User ID", "User Name", "User Type", "Technical Analysis Method", "Cash Remain", "Active"
                });
        listUserJTable.repaint();

        ArrayList<String> listUserName = new ArrayList<String>();
        for (int i = 0; i < AutoTrade.LIST_ALL_USER.size(); ++i) {
            if (AutoTrade.LIST_ALL_USER.get(i).isActive()) {
                listUserName.add(AutoTrade.LIST_ALL_USER.get(i).getUserName());
            }
        }
        userJComboBox.setModel(new DefaultComboBoxModel(listUserName.toArray()));
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                AutoTrade.earliestTime = AutoTrade.getEarliestTimeInDatabase();
                AutoTrade.latestTime = AutoTrade.getLatestTimeInDatabase();
                new MainFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AccountInfoJPanel;
    private javax.swing.JPanel chartJPanel;
    private javax.swing.JLabel closePriceJLabel;
    private javax.swing.JTextField closePriceJTextField;
    private javax.swing.JLabel currentDateJLabel;
    private javax.swing.JLabel dateJLabel;
    private javax.swing.JPanel dateJPanel;
    private javax.swing.JSpinner dateJSpinner;
    private javax.swing.JMenu editJMenu;
    private javax.swing.JLabel highPriceJLabel;
    private javax.swing.JTextField highPriceJTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable5;
    public javax.swing.JTable listUserJTable;
    private javax.swing.JLabel lowPriceJLabel;
    private javax.swing.JTextField lowPriceJTextField;
    private javax.swing.JTabbedPane mainJTabbedPane;
    private javax.swing.JButton newJButton;
    private javax.swing.JButton nextDayJButton;
    private javax.swing.JButton nextMonthJButton;
    private javax.swing.JButton nextYearJButton;
    private javax.swing.JLabel numberOfDayJLabel;
    private javax.swing.JSpinner numberOfDayJSpinner;
    private javax.swing.JLabel openPriceJLabel;
    private javax.swing.JTextField openPriceJTextField;
    private javax.swing.JComboBox priceTypeJComboBox;
    private javax.swing.JLabel priceTypeJLabel;
    private javax.swing.JPanel priceVolumeChartJPanel;
    private javax.swing.JButton removeJButton;
    private javax.swing.JMenuItem settingJMenuItem;
    private javax.swing.JComboBox symbolJComboBox;
    private javax.swing.JLabel symbolJLabel;
    private javax.swing.JPanel transactionJPanel;
    public javax.swing.JComboBox userJComboBox;
    private javax.swing.JPanel userManagementJPanel;
    private javax.swing.JLabel volumeJLabel;
    private javax.swing.JTextField volumeJTextField;
    // End of variables declaration//GEN-END:variables

    private void updatePriceAndVolume() {
        StockInfoDaily stockInfo = AutoTrade.getStockInfo((String) symbolJComboBox.getSelectedItem(), AutoTradeLocalData.load().getCenter_date().getTime());

        openPriceJTextField.setText(stockInfo.getOpenPrice() + "");
        highPriceJTextField.setText(stockInfo.getHighPrice() + "");
        lowPriceJTextField.setText(stockInfo.getLowPrice() + "");
        closePriceJTextField.setText(stockInfo.getClosePrice() + "");
        volumeJTextField.setText(stockInfo.getVolume() + "");
    }

    private void updatePriceVolumeChart() {
        calendar.setTime(AutoTradeLocalData.load().getCenter_date());
        calendar.add(Calendar.DAY_OF_MONTH, -AutoTradeLocalData.load().getNumber_of_day() / 2);
        long startTime = calendar.getTimeInMillis();
        calendar.add(Calendar.DAY_OF_MONTH, AutoTradeLocalData.load().getNumber_of_day());
        long endTime = calendar.getTimeInMillis();

        if (endTime > AutoTradeLocalData.load().getCurrentDate().getTime()) {
            endTime = AutoTradeLocalData.load().getCurrentDate().getTime();
        }

        final XYDataset priceDataset = createPriceDataset(startTime, endTime, AutoTradeLocalData.load().getSymbol(), (String) priceTypeJComboBox.getSelectedItem());
        final XYDataset volumeDataset = createVolumeDataset(startTime, endTime, AutoTradeLocalData.load().getSymbol());
        final JFreeChart chart = createPriceVolumeChart(priceDataset, volumeDataset);
        ((ChartPanel) priceVolumeChartJPanel).setChart(chart);
    }

    private XYDataset createPriceDataset(long startTime, long endTime, String symbol, String priceType) {
        final TimeSeries priceSeries = AutoTrade.getPriceSeries(startTime, endTime, symbol, priceType);
        final TimeSeriesCollection dataset = new TimeSeriesCollection();
        dataset.addSeries(priceSeries);
        return dataset;
    }

    private XYDataset createVolumeDataset(long startTime, long endTime, String symbol) {
        final TimeSeries volumeSeries = AutoTrade.getVolumeSeries(startTime, endTime, symbol);
        final TimeSeriesCollection dataset = new TimeSeriesCollection();
        dataset.addSeries(volumeSeries);
        return dataset;
    }

    private JFreeChart createPriceVolumeChart(final XYDataset priceDataset, final XYDataset volumeDataset) {
        JFreeChart chart = ChartFactory.createTimeSeriesChart(
                "",
                "Date",
                "Price",
                priceDataset,
                true,
                true,
                false);
        //chart.getXYPlot().getRangeAxis().setLowerBound(0);
        chart.setBackgroundPaint(Color.white);
        XYPlot plot = chart.getXYPlot();

        DateAxis dateAxis = (DateAxis) plot.getDomainAxis();
        dateAxis.setPositiveArrowVisible(true);

        NumberAxis priceRangeAxis = (NumberAxis) plot.getRangeAxis();
        priceRangeAxis.setLowerMargin(0.40); // to leave room for volume bars
        DecimalFormat format = new DecimalFormat("00.00");
        priceRangeAxis.setNumberFormatOverride(format);

        XYItemRenderer priceRenderer = plot.getRenderer();

        priceRenderer.setBaseToolTipGenerator(
                new StandardXYToolTipGenerator(
                StandardXYToolTipGenerator.DEFAULT_TOOL_TIP_FORMAT,
                new SimpleDateFormat("d-MMM-yyyy"), new DecimalFormat("0.00")));

        NumberAxis volumeRangeAxis = new NumberAxis("Volume");
        volumeRangeAxis.setUpperMargin(1.00); // to leave room for price line
        plot.setRangeAxis(1, volumeRangeAxis);
        plot.setDataset(1, new XYBarDataset(volumeDataset, 100000000));
        plot.mapDatasetToRangeAxis(1, 1);
        XYBarRenderer volumeRenderer = new XYBarRenderer(0.20);
        volumeRenderer.setBarPainter(new StandardXYBarPainter());
        volumeRenderer.setShadowVisible(false);
        volumeRenderer.setBaseToolTipGenerator(
                new StandardXYToolTipGenerator(
                StandardXYToolTipGenerator.DEFAULT_TOOL_TIP_FORMAT,
                new SimpleDateFormat("d-MMM-yyyy"), new DecimalFormat("0,000.00")));
        volumeRenderer.setSeriesPaint(0, Color.GREEN);
        plot.setRenderer(1, volumeRenderer);
        return chart;
    }
}
