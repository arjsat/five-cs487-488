/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PredictionAlgorithmEvaluationJPanel.java
 *
 * Created on Jun 23, 2011, 4:41:06 PM
 */

package presentation.guiForPredictionAlgorithmEvaluation;

import business.dataVisualization.ChartStyle;
import business.dataVisualization.DataVisualizationProcessor;
import dataAccess.databaseManagement.entity.AssetEntity;
import dataAccess.databaseManagement.entity.ExchangeEntity;
import dataAccess.databaseManagement.manager.AssetManager;
import dataAccess.databaseManagement.manager.ExchangeManager;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.TreeMap;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.data.time.TimeSeriesCollection;
import presentation.ComboKeyHandler;
import presentation.guiForDataVisualization.DataVisualizationJPanel;
import presentation.mainJFrame;

/**
 *
 * @author Dinh
 */
public class PredictionAlgorithmEvaluationJPanel extends javax.swing.JPanel {

    /** Creates new form PredictionAlgorithmEvaluationJPanel */
    public PredictionAlgorithmEvaluationJPanel() {
        initComponents();
        initOtherComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateJPanel = new javax.swing.JPanel();
        datejLabel = new javax.swing.JLabel();
        startPredictDateJLabel = new javax.swing.JLabel();
        startPredictJSpinner = new javax.swing.JSpinner();
        algorithmjPanel = new javax.swing.JPanel();
        preAlgjLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        preAlgsJList = new javax.swing.JList();
        addPreAlgjButton = new javax.swing.JButton();
        removePreAlgjButton = new javax.swing.JButton();
        evaluationCriteriaJPanel = new javax.swing.JPanel();
        preEvaluationCriteriaJLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        preEvaCrisJList = new javax.swing.JList();
        addPreEvaCriteriajButton = new javax.swing.JButton();
        removePreEvaCriteriajButton = new javax.swing.JButton();
        comparisonTableJPanel = new javax.swing.JPanel();
        comparisonTableJLabel = new javax.swing.JLabel();
        tableJPanel = new javax.swing.JPanel();
        visualizationJPanel = new javax.swing.JPanel();
        symbolOptionJPanel = new javax.swing.JPanel();
        assetJLabel = new javax.swing.JLabel();
        assetJComboBox = new javax.swing.JComboBox();
        fromJLabel = new javax.swing.JLabel();
        fromDateJSpinner = new javax.swing.JSpinner();
        toDateJLabel = new javax.swing.JLabel();
        toDateJSpinner = new javax.swing.JSpinner();
        exchangeJLabel = new javax.swing.JLabel();
        exchangeJComboBox = new javax.swing.JComboBox();
        chartStyleJLabel = new javax.swing.JLabel();
        charStyleJComboBox = new javax.swing.JComboBox();
        visualizationChartJPanel = new ChartPanel(ChartFactory.createTimeSeriesChart("", "", "", new TimeSeriesCollection(), true, true, true));

        datejLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        datejLabel.setText("DATE");

        startPredictDateJLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        startPredictDateJLabel.setText("Start Predict:");

        startPredictJSpinner.setModel(new javax.swing.SpinnerDateModel());
        startPredictJSpinner.setEditor(new JSpinner.DateEditor(startPredictJSpinner, "MM/dd/yyyy"));

        javax.swing.GroupLayout dateJPanelLayout = new javax.swing.GroupLayout(dateJPanel);
        dateJPanel.setLayout(dateJPanelLayout);
        dateJPanelLayout.setHorizontalGroup(
            dateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dateJPanelLayout.createSequentialGroup()
                .addGroup(dateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dateJPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(datejLabel))
                    .addGroup(dateJPanelLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(startPredictDateJLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(startPredictJSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        dateJPanelLayout.setVerticalGroup(
            dateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dateJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(datejLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startPredictDateJLabel)
                    .addComponent(startPredictJSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        preAlgjLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        preAlgjLabel.setText("PREDICTION ALGORITHM");

        preAlgsJList.setModel(new DefaultListModel());
        jScrollPane1.setViewportView(preAlgsJList);

        addPreAlgjButton.setText("Add");
        addPreAlgjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPreAlgjButtonActionPerformed(evt);
            }
        });

        removePreAlgjButton.setText("Remove");
        removePreAlgjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removePreAlgjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout algorithmjPanelLayout = new javax.swing.GroupLayout(algorithmjPanel);
        algorithmjPanel.setLayout(algorithmjPanelLayout);
        algorithmjPanelLayout.setHorizontalGroup(
            algorithmjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(algorithmjPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(algorithmjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(algorithmjPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(algorithmjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(removePreAlgjButton)
                            .addComponent(addPreAlgjButton)))
                    .addComponent(preAlgjLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        algorithmjPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addPreAlgjButton, removePreAlgjButton});

        algorithmjPanelLayout.setVerticalGroup(
            algorithmjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(algorithmjPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(preAlgjLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(algorithmjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(algorithmjPanelLayout.createSequentialGroup()
                        .addComponent(addPreAlgjButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removePreAlgjButton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        algorithmjPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {addPreAlgjButton, removePreAlgjButton});

        preEvaluationCriteriaJLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        preEvaluationCriteriaJLabel.setText("PREDICTION EVALUATION CRITERIA");

        preEvaCrisJList.setModel(new DefaultListModel());
        jScrollPane3.setViewportView(preEvaCrisJList);

        addPreEvaCriteriajButton.setText("Add");
        addPreEvaCriteriajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPreEvaCriteriajButtonActionPerformed(evt);
            }
        });

        removePreEvaCriteriajButton.setText("Remove");
        removePreEvaCriteriajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removePreEvaCriteriajButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout evaluationCriteriaJPanelLayout = new javax.swing.GroupLayout(evaluationCriteriaJPanel);
        evaluationCriteriaJPanel.setLayout(evaluationCriteriaJPanelLayout);
        evaluationCriteriaJPanelLayout.setHorizontalGroup(
            evaluationCriteriaJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(evaluationCriteriaJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(evaluationCriteriaJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(evaluationCriteriaJPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(evaluationCriteriaJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addPreEvaCriteriajButton)
                            .addComponent(removePreEvaCriteriajButton)))
                    .addComponent(preEvaluationCriteriaJLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        evaluationCriteriaJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addPreEvaCriteriajButton, removePreEvaCriteriajButton});

        evaluationCriteriaJPanelLayout.setVerticalGroup(
            evaluationCriteriaJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(evaluationCriteriaJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(preEvaluationCriteriaJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(evaluationCriteriaJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(evaluationCriteriaJPanelLayout.createSequentialGroup()
                        .addComponent(addPreEvaCriteriajButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removePreEvaCriteriajButton))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        evaluationCriteriaJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {addPreEvaCriteriajButton, removePreEvaCriteriajButton});

        comparisonTableJLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        comparisonTableJLabel.setText("COMPARISON TABLE");

        javax.swing.GroupLayout tableJPanelLayout = new javax.swing.GroupLayout(tableJPanel);
        tableJPanel.setLayout(tableJPanelLayout);
        tableJPanelLayout.setHorizontalGroup(
            tableJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1084, Short.MAX_VALUE)
        );
        tableJPanelLayout.setVerticalGroup(
            tableJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 84, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout comparisonTableJPanelLayout = new javax.swing.GroupLayout(comparisonTableJPanel);
        comparisonTableJPanel.setLayout(comparisonTableJPanelLayout);
        comparisonTableJPanelLayout.setHorizontalGroup(
            comparisonTableJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(comparisonTableJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(comparisonTableJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(comparisonTableJPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(tableJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(comparisonTableJLabel))
                .addContainerGap())
        );
        comparisonTableJPanelLayout.setVerticalGroup(
            comparisonTableJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(comparisonTableJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comparisonTableJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tableJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        assetJLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        assetJLabel.setText("Asset:");

        assetJComboBox.setEditable(true);
        assetJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assetJComboBoxActionPerformed(evt);
            }
        });

        fromJLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        fromJLabel.setText("From:");

        fromDateJSpinner.setModel(new javax.swing.SpinnerDateModel());
        fromDateJSpinner.setEditor(new JSpinner.DateEditor(fromDateJSpinner, "MM/dd/yyyy"));
        fromDateJSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                fromDateJSpinnerStateChanged(evt);
            }
        });

        toDateJLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        toDateJLabel.setText("To:");

        toDateJSpinner.setModel(new javax.swing.SpinnerDateModel());
        toDateJSpinner.setEditor(new JSpinner.DateEditor(toDateJSpinner, "MM/dd/yyyy"));
        toDateJSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                toDateJSpinnerStateChanged(evt);
            }
        });

        exchangeJLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        exchangeJLabel.setText("Exchange:");

        exchangeJComboBox.setEditable(true);
        exchangeJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exchangeJComboBoxActionPerformed(evt);
            }
        });

        chartStyleJLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        chartStyleJLabel.setText("Chart Style:");

        charStyleJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        charStyleJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                charStyleJComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout symbolOptionJPanelLayout = new javax.swing.GroupLayout(symbolOptionJPanel);
        symbolOptionJPanel.setLayout(symbolOptionJPanelLayout);
        symbolOptionJPanelLayout.setHorizontalGroup(
            symbolOptionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(symbolOptionJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(exchangeJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exchangeJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(assetJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(assetJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(fromJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fromDateJSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(toDateJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(toDateJSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(chartStyleJLabel)
                .addGap(18, 18, 18)
                .addComponent(charStyleJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(77, Short.MAX_VALUE))
        );
        symbolOptionJPanelLayout.setVerticalGroup(
            symbolOptionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, symbolOptionJPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(symbolOptionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exchangeJLabel)
                    .addComponent(exchangeJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(assetJLabel)
                    .addComponent(assetJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fromJLabel)
                    .addComponent(fromDateJSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toDateJLabel)
                    .addComponent(toDateJSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chartStyleJLabel)
                    .addComponent(charStyleJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout visualizationChartJPanelLayout = new javax.swing.GroupLayout(visualizationChartJPanel);
        visualizationChartJPanel.setLayout(visualizationChartJPanelLayout);
        visualizationChartJPanelLayout.setHorizontalGroup(
            visualizationChartJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 805, Short.MAX_VALUE)
        );
        visualizationChartJPanelLayout.setVerticalGroup(
            visualizationChartJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 406, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout visualizationJPanelLayout = new javax.swing.GroupLayout(visualizationJPanel);
        visualizationJPanel.setLayout(visualizationJPanelLayout);
        visualizationJPanelLayout.setHorizontalGroup(
            visualizationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, visualizationJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(visualizationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(visualizationChartJPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(symbolOptionJPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        visualizationJPanelLayout.setVerticalGroup(
            visualizationJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, visualizationJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(visualizationChartJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(symbolOptionJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(algorithmjPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dateJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(evaluationCriteriaJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(visualizationJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(comparisonTableJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dateJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(algorithmjPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(evaluationCriteriaJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(visualizationJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comparisonTableJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addPreAlgjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPreAlgjButtonActionPerformed
        addPreAlgDialog.setVisible(true);
        DefaultListModel model = (DefaultListModel) this.preAlgsJList.getModel();
        model.addElement("aaaa");
}//GEN-LAST:event_addPreAlgjButtonActionPerformed

    private void removePreAlgjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removePreAlgjButtonActionPerformed
        DefaultListModel model = (DefaultListModel) this.preAlgsJList.getModel();
        int[] selectedIndices = preAlgsJList.getSelectedIndices();
        int j = 0;
        for (int i : selectedIndices) {
            model.remove(i-j);
            ++j;
        }
        preAlgsJList.updateUI();
}//GEN-LAST:event_removePreAlgjButtonActionPerformed

    private void addPreEvaCriteriajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPreEvaCriteriajButtonActionPerformed
        addPreEvaCriteriaDialog.setVisible(true);
        DefaultListModel model = (DefaultListModel) this.preEvaCrisJList.getModel();
        model.addElement("aaaa");
}//GEN-LAST:event_addPreEvaCriteriajButtonActionPerformed

    private void removePreEvaCriteriajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removePreEvaCriteriajButtonActionPerformed
        DefaultListModel model = (DefaultListModel) this.preEvaCrisJList.getModel();
        int[] selectedIndices = preEvaCrisJList.getSelectedIndices();
        int j = 0;
        for (int i : selectedIndices) {
            model.remove(i-j);
            ++j;
        }
        preEvaCrisJList.updateUI();
}//GEN-LAST:event_removePreEvaCriteriajButtonActionPerformed

    private void assetJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assetJComboBoxActionPerformed
        if (assetJComboBox.getSelectedIndex() != -1) {
            dataVisualizationProcessor.setAsset((AssetEntity) assetJComboBox.getSelectedItem());
            dataVisualizationProcessor.updateChart();
            ((ChartPanel) visualizationChartJPanel).setChart(dataVisualizationProcessor.getChart());
        }
}//GEN-LAST:event_assetJComboBoxActionPerformed

    private void fromDateJSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_fromDateJSpinnerStateChanged
        if (fromDateJSpinner.getValue() == null || dataVisualizationProcessor == null) {
            return;
        }

        dataVisualizationProcessor.setFromDate((Date) fromDateJSpinner.getValue());
        dataVisualizationProcessor.updateChart();
        ((ChartPanel) visualizationChartJPanel).setChart(dataVisualizationProcessor.getChart());
}//GEN-LAST:event_fromDateJSpinnerStateChanged

    private void toDateJSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_toDateJSpinnerStateChanged
        if (toDateJSpinner.getValue() == null || dataVisualizationProcessor == null) {
            return;
        }

        dataVisualizationProcessor.setToDate((Date) toDateJSpinner.getValue());
        dataVisualizationProcessor.updateChart();
        ((ChartPanel) visualizationChartJPanel).setChart(dataVisualizationProcessor.getChart());
}//GEN-LAST:event_toDateJSpinnerStateChanged

    private void exchangeJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exchangeJComboBoxActionPerformed
        if (exchangeJComboBox.getSelectedIndex() != -1) {
            assetJComboBox.setModel(new javax.swing.DefaultComboBoxModel(DataVisualizationJPanel.mappingExchangeID_Assets.get((ExchangeEntity) exchangeJComboBox.getSelectedItem())));
            assetComboKeyHandler.updateListObjects();
            assetJComboBox.setSelectedIndex(0);
        }
}//GEN-LAST:event_exchangeJComboBoxActionPerformed

    private void charStyleJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_charStyleJComboBoxActionPerformed
        dataVisualizationProcessor.changeChartType((ChartStyle) charStyleJComboBox.getSelectedItem());
        ((ChartPanel) visualizationChartJPanel).setChart(dataVisualizationProcessor.getChart());
}//GEN-LAST:event_charStyleJComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addPreAlgjButton;
    private javax.swing.JButton addPreEvaCriteriajButton;
    private javax.swing.JPanel algorithmjPanel;
    private javax.swing.JComboBox assetJComboBox;
    private javax.swing.JLabel assetJLabel;
    private javax.swing.JComboBox charStyleJComboBox;
    private javax.swing.JLabel chartStyleJLabel;
    private javax.swing.JLabel comparisonTableJLabel;
    private javax.swing.JPanel comparisonTableJPanel;
    private javax.swing.JPanel dateJPanel;
    private javax.swing.JLabel datejLabel;
    private javax.swing.JPanel evaluationCriteriaJPanel;
    private javax.swing.JComboBox exchangeJComboBox;
    private javax.swing.JLabel exchangeJLabel;
    private javax.swing.JSpinner fromDateJSpinner;
    private javax.swing.JLabel fromJLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel preAlgjLabel;
    private javax.swing.JList preAlgsJList;
    private javax.swing.JList preEvaCrisJList;
    private javax.swing.JLabel preEvaluationCriteriaJLabel;
    private javax.swing.JButton removePreAlgjButton;
    private javax.swing.JButton removePreEvaCriteriajButton;
    private javax.swing.JLabel startPredictDateJLabel;
    private javax.swing.JSpinner startPredictJSpinner;
    private javax.swing.JPanel symbolOptionJPanel;
    private javax.swing.JPanel tableJPanel;
    private javax.swing.JLabel toDateJLabel;
    private javax.swing.JSpinner toDateJSpinner;
    private javax.swing.JPanel visualizationChartJPanel;
    private javax.swing.JPanel visualizationJPanel;
    // End of variables declaration//GEN-END:variables

    private JDialog addPreAlgDialog = newAddPreAlgJDialog();
    private JDialog addPreEvaCriteriaDialog = newAddPreEvaCriteriaJDialog();
    private DataVisualizationProcessor dataVisualizationProcessor;
    private ComboKeyHandler exchangeComboKeyHandler;
    private ComboKeyHandler assetComboKeyHandler;


    private JDialog newAddPreAlgJDialog() {
        JDialog jDialog = new JDialog(mainJFrame.mainFrame, true);
        AddNewPreAlgJPanel panel = new AddNewPreAlgJPanel(jDialog);
        jDialog.add(panel);
        jDialog.pack();
        return jDialog;
    }

    private JDialog newAddPreEvaCriteriaJDialog() {
        JDialog jDialog = new JDialog(mainJFrame.mainFrame, true);
        AddNewPreEvaCriteriaJPanel panel = new AddNewPreEvaCriteriaJPanel(jDialog);
        jDialog.add(panel);
        jDialog.pack();
        return jDialog;
    }

    private void initOtherComponents() {
        Calendar now = Calendar.getInstance();
        now.add(Calendar.DATE, -7);
        startPredictJSpinner.setValue(now.getTime());
        now.add(Calendar.DATE, 7);
        toDateJSpinner.setValue(now.getTime());
        now.add(Calendar.MONTH, -6);
        fromDateJSpinner.setValue(now.getTime());


        if (DataVisualizationJPanel.mappingExchangeID_Assets == null) {
            DataVisualizationJPanel.mappingExchangeID_Assets = new TreeMap<ExchangeEntity, Object[]>();
            ArrayList<ExchangeEntity> listAllExchangeEntitys = (new ExchangeManager()).getAllExchanges();
            for (ExchangeEntity exchangeEntity : listAllExchangeEntitys) {
                ArrayList<AssetEntity> listAssets = (new AssetManager()).getAssetsByExchange(exchangeEntity.getExchangeID());
                DataVisualizationJPanel.mappingExchangeID_Assets.put(exchangeEntity, listAssets.toArray());
            }
        }

        charStyleJComboBox.setModel(new DefaultComboBoxModel(DataVisualizationProcessor.CHART_STYLES));

        exchangeJComboBox.setModel(new DefaultComboBoxModel(DataVisualizationJPanel.mappingExchangeID_Assets.keySet().toArray()));
        exchangeComboKeyHandler = new ComboKeyHandler(exchangeJComboBox);
        JTextField fieldExchange = (JTextField) exchangeJComboBox.getEditor().getEditorComponent();
        fieldExchange.addKeyListener(exchangeComboKeyHandler);

        assetJComboBox.setModel(new DefaultComboBoxModel(DataVisualizationJPanel.mappingExchangeID_Assets.get((ExchangeEntity) exchangeJComboBox.getSelectedItem())));
        assetComboKeyHandler = new ComboKeyHandler(assetJComboBox);
        JTextField fieldSymbol = (JTextField) assetJComboBox.getEditor().getEditorComponent();
        fieldSymbol.addKeyListener(assetComboKeyHandler);

        dataVisualizationProcessor = new DataVisualizationProcessor((AssetEntity) assetJComboBox.getSelectedItem(), (Date) fromDateJSpinner.getValue(), (Date) toDateJSpinner.getValue(), (ChartStyle) charStyleJComboBox.getSelectedItem());
        ((ChartPanel) visualizationChartJPanel).setChart(dataVisualizationProcessor.getChart());

    }

}
