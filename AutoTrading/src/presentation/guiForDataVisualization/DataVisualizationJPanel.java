/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DataVisualizationJPanel.java
 *
 * Created on Jun 15, 2011, 11:32:36 AM
 */
package presentation.guiForDataVisualization;

import business.algorithm.decisionAlgorithm.AbstractDecisionAlgorithm;
import business.algorithm.predictAlgorithm.AbstractPredictAlgorithm;
import business.dataVisualization.ChartStyle;
import business.dataVisualization.DataVisualizationProcessor;
import dataAccess.databaseManagement.entity.AssetEntity;
import dataAccess.databaseManagement.entity.ExchangeEntity;
import dataAccess.databaseManagement.manager.AssetManager;
import dataAccess.databaseManagement.manager.ExchangeManager;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Date;
import java.util.TreeMap;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.data.time.TimeSeriesCollection;
import presentation.ComboKeyHandler;

/**
 *
 * @author Dinh
 */
public class DataVisualizationJPanel extends javax.swing.JPanel {

    /** Creates new form DataVisualizationJPanel */
    public DataVisualizationJPanel() {
        initComponents();
        initOtherComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        algorithmOptionJPanel = new javax.swing.JPanel();
        algorithmJLabel = new javax.swing.JLabel();
        startPredictionJLabel = new javax.swing.JLabel();
        preAlgJLabel = new javax.swing.JLabel();
        decAlgJLabel = new javax.swing.JLabel();
        startPredictionDateJSpinner = new javax.swing.JSpinner();
        preAlgJComboBox = new javax.swing.JComboBox();
        decAlgJComboBox = new javax.swing.JComboBox();
        preAlgParametersJPanel = new javax.swing.JPanel();
        decAlgParametersJPanel = new javax.swing.JPanel();
        preAlgParametersJLabel = new javax.swing.JLabel();
        decAlgParametersjLabel = new javax.swing.JLabel();
        runDecAlgJButton = new javax.swing.JButton();
        runPreAlgJButton = new javax.swing.JButton();
        visualizationChartJPanel = new ChartPanel(ChartFactory.createTimeSeriesChart("", "", "", new TimeSeriesCollection(), true, true, true));
        symbolOptionJPanel = new javax.swing.JPanel();
        assetJLabel = new javax.swing.JLabel();
        assetJComboBox = new javax.swing.JComboBox();
        fromJLabel = new javax.swing.JLabel();
        fromDateJSpinner = new javax.swing.JSpinner();
        toDateJLabel = new javax.swing.JLabel();
        toDateJSpinner = new javax.swing.JSpinner();
        exchangeJLabel = new javax.swing.JLabel();
        exchangeJComboBox = new javax.swing.JComboBox();
        chartStyleJLabel = new javax.swing.JLabel();
        charStyleJComboBox = new javax.swing.JComboBox();
        refreshDataJButton = new javax.swing.JButton();

        algorithmJLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        algorithmJLabel.setText("ALGORITHM");

        startPredictionJLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        startPredictionJLabel.setText("Start Prediction:");

        preAlgJLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        preAlgJLabel.setText("Prediction Algorithm:");

        decAlgJLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        decAlgJLabel.setText("Decision Algorithm:");

        startPredictionDateJSpinner.setModel(new javax.swing.SpinnerDateModel());
        startPredictionDateJSpinner.setEditor(new JSpinner.DateEditor(startPredictionDateJSpinner, "MM/dd/yyyy"));

        preAlgJComboBox.setModel(new javax.swing.DefaultComboBoxModel(business.algorithm.predictAlgorithm.Utility.predictionAlgorithmList));
        preAlgJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                preAlgJComboBoxActionPerformed(evt);
            }
        });

        decAlgJComboBox.setModel(new javax.swing.DefaultComboBoxModel(business.algorithm.decisionAlgorithm.Utility.decisionAlgorithmList));
        decAlgJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decAlgJComboBoxActionPerformed(evt);
            }
        });

        preAlgParametersJPanel.setLayout(new java.awt.GridLayout(1, 0));

        decAlgParametersJPanel.setLayout(new java.awt.GridLayout(1, 0));

        preAlgParametersJLabel.setText("Parameter:");

        decAlgParametersjLabel.setText("Parameter:");

        runDecAlgJButton.setText("Run");
        runDecAlgJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runDecAlgJButtonActionPerformed(evt);
            }
        });

        runPreAlgJButton.setText("Run");
        runPreAlgJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runPreAlgJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout algorithmOptionJPanelLayout = new javax.swing.GroupLayout(algorithmOptionJPanel);
        algorithmOptionJPanel.setLayout(algorithmOptionJPanelLayout);
        algorithmOptionJPanelLayout.setHorizontalGroup(
            algorithmOptionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(algorithmOptionJPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(algorithmOptionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(algorithmJLabel)
                    .addGroup(algorithmOptionJPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(algorithmOptionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(algorithmOptionJPanelLayout.createSequentialGroup()
                                .addComponent(decAlgJLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(decAlgJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(algorithmOptionJPanelLayout.createSequentialGroup()
                                .addComponent(preAlgJLabel)
                                .addGap(18, 18, 18)
                                .addComponent(preAlgJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(algorithmOptionJPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(algorithmOptionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(preAlgParametersJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(algorithmOptionJPanelLayout.createSequentialGroup()
                                        .addComponent(preAlgParametersJLabel)
                                        .addGap(18, 18, 18)
                                        .addComponent(runPreAlgJButton))))
                            .addGroup(algorithmOptionJPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(algorithmOptionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(decAlgParametersJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(algorithmOptionJPanelLayout.createSequentialGroup()
                                        .addComponent(decAlgParametersjLabel)
                                        .addGap(18, 18, 18)
                                        .addComponent(runDecAlgJButton))))))
                    .addGroup(algorithmOptionJPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(startPredictionJLabel)
                        .addGap(44, 44, 44)
                        .addComponent(startPredictionDateJSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        algorithmOptionJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {decAlgJComboBox, preAlgJComboBox});

        algorithmOptionJPanelLayout.setVerticalGroup(
            algorithmOptionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(algorithmOptionJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(algorithmJLabel)
                .addGap(11, 11, 11)
                .addGroup(algorithmOptionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startPredictionJLabel)
                    .addComponent(startPredictionDateJSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(algorithmOptionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(preAlgJLabel)
                    .addComponent(preAlgJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(algorithmOptionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(preAlgParametersJLabel)
                    .addComponent(runPreAlgJButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(preAlgParametersJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(algorithmOptionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(decAlgJLabel)
                    .addComponent(decAlgJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(algorithmOptionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(decAlgParametersjLabel)
                    .addComponent(runDecAlgJButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(decAlgParametersJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(312, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout visualizationChartJPanelLayout = new javax.swing.GroupLayout(visualizationChartJPanel);
        visualizationChartJPanel.setLayout(visualizationChartJPanelLayout);
        visualizationChartJPanelLayout.setHorizontalGroup(
            visualizationChartJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 853, Short.MAX_VALUE)
        );
        visualizationChartJPanelLayout.setVerticalGroup(
            visualizationChartJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 422, Short.MAX_VALUE)
        );

        assetJLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        assetJLabel.setText("Asset:");

        assetJComboBox.setEditable(true);
        assetJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assetJComboBoxActionPerformed(evt);
            }
        });

        fromJLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        fromJLabel.setText("From:");

        fromDateJSpinner.setModel(new javax.swing.SpinnerDateModel());
        fromDateJSpinner.setEditor(new JSpinner.DateEditor(fromDateJSpinner, "MM/dd/yyyy"));
        fromDateJSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                fromDateJSpinnerStateChanged(evt);
            }
        });

        toDateJLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        toDateJLabel.setText("To:");

        toDateJSpinner.setModel(new javax.swing.SpinnerDateModel());
        toDateJSpinner.setEditor(new JSpinner.DateEditor(toDateJSpinner, "MM/dd/yyyy"));
        toDateJSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                toDateJSpinnerStateChanged(evt);
            }
        });

        exchangeJLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        exchangeJLabel.setText("Exchange:");

        exchangeJComboBox.setEditable(true);
        exchangeJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exchangeJComboBoxActionPerformed(evt);
            }
        });

        chartStyleJLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        chartStyleJLabel.setText("Chart Style:");

        charStyleJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        charStyleJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                charStyleJComboBoxActionPerformed(evt);
            }
        });

        refreshDataJButton.setText("Refresh Data");
        refreshDataJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshDataJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout symbolOptionJPanelLayout = new javax.swing.GroupLayout(symbolOptionJPanel);
        symbolOptionJPanel.setLayout(symbolOptionJPanelLayout);
        symbolOptionJPanelLayout.setHorizontalGroup(
            symbolOptionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(symbolOptionJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(exchangeJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exchangeJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(assetJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(assetJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(fromJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fromDateJSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(toDateJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(toDateJSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(chartStyleJLabel)
                .addGap(18, 18, 18)
                .addComponent(charStyleJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(refreshDataJButton)
                .addContainerGap())
        );
        symbolOptionJPanelLayout.setVerticalGroup(
            symbolOptionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, symbolOptionJPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(symbolOptionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exchangeJLabel)
                    .addComponent(exchangeJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(assetJLabel)
                    .addComponent(assetJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fromJLabel)
                    .addComponent(fromDateJSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toDateJLabel)
                    .addComponent(toDateJSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chartStyleJLabel)
                    .addComponent(charStyleJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refreshDataJButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(algorithmOptionJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(symbolOptionJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(visualizationChartJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(algorithmOptionJPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(visualizationChartJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(symbolOptionJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void exchangeJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exchangeJComboBoxActionPerformed
        if (exchangeJComboBox.getSelectedIndex() != -1) {
            assetJComboBox.setModel(new javax.swing.DefaultComboBoxModel(mappingExchangeID_Assets.get((ExchangeEntity) exchangeJComboBox.getSelectedItem())));
            assetComboKeyHandler.updateListObjects();
            assetJComboBox.setSelectedIndex(0);
        }
    }//GEN-LAST:event_exchangeJComboBoxActionPerformed

    private void assetJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assetJComboBoxActionPerformed
        if (assetJComboBox.getSelectedIndex() != -1) {
            dataVisualizationProcessor.setAsset((AssetEntity) assetJComboBox.getSelectedItem());
            dataVisualizationProcessor.updateChart();
            ((ChartPanel) visualizationChartJPanel).setChart(dataVisualizationProcessor.getChart());
        }
    }//GEN-LAST:event_assetJComboBoxActionPerformed

    private void fromDateJSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_fromDateJSpinnerStateChanged
        if (fromDateJSpinner.getValue() == null || dataVisualizationProcessor == null) {
            return;
        }

        dataVisualizationProcessor.setFromDate((Date) fromDateJSpinner.getValue());
        dataVisualizationProcessor.updateChart();
        ((ChartPanel) visualizationChartJPanel).setChart(dataVisualizationProcessor.getChart());
    }//GEN-LAST:event_fromDateJSpinnerStateChanged

    private void toDateJSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_toDateJSpinnerStateChanged
        if (toDateJSpinner.getValue() == null || dataVisualizationProcessor == null) {
            return;
        }

        dataVisualizationProcessor.setToDate((Date) toDateJSpinner.getValue());
        dataVisualizationProcessor.updateChart();
        ((ChartPanel) visualizationChartJPanel).setChart(dataVisualizationProcessor.getChart());
    }//GEN-LAST:event_toDateJSpinnerStateChanged

    private void charStyleJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_charStyleJComboBoxActionPerformed
        dataVisualizationProcessor.changeChartType((ChartStyle) charStyleJComboBox.getSelectedItem());
        ((ChartPanel) visualizationChartJPanel).setChart(dataVisualizationProcessor.getChart());
    }//GEN-LAST:event_charStyleJComboBoxActionPerformed

    private void refreshDataJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshDataJButtonActionPerformed
        dataVisualizationProcessor.updateChart();
        ((ChartPanel) visualizationChartJPanel).setChart(dataVisualizationProcessor.getChart());
    }//GEN-LAST:event_refreshDataJButtonActionPerformed

    private void preAlgJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_preAlgJComboBoxActionPerformed
        preAlgParametersJPanel.removeAll();
        preAlg = business.algorithm.predictAlgorithm.Utility.getPredictionAlgorithm((String)preAlgJComboBox.getSelectedItem());
        parameterJPanel = new ParameterJPanel(preAlg.getParametersList());
		preAlgParametersJPanel.add(parameterJPanel);
    }//GEN-LAST:event_preAlgJComboBoxActionPerformed

    private void decAlgJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decAlgJComboBoxActionPerformed
        decAlgParametersJPanel.removeAll();
        decAlg = business.algorithm.decisionAlgorithm.Utility.getDecisionAlgorithm((String)decAlgJComboBox.getSelectedItem());
        decAlgParametersJPanel.add(new ParameterJPanel(decAlg.getParametersList()));
    }//GEN-LAST:event_decAlgJComboBoxActionPerformed

    private void runPreAlgJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runPreAlgJButtonActionPerformed
    	TreeMap<String, Object> valueMap = new TreeMap<String, Object>();
    	//JOptionPane.showMessageDialog(new JFrame(), parameterJPanel == null);
    	for (String name : preAlg.getParametersList().keySet()) {
    		valueMap.put(name, parameterJPanel.getValue(name));
    	}
    	preAlg.setParametersValue(valueMap);
    	dataVisualizationProcessor.setStartPreDate((Date) startPredictionDateJSpinner.getValue());
        dataVisualizationProcessor.getPreAlgList().clear();
        dataVisualizationProcessor.addPreAlg(preAlg);
        dataVisualizationProcessor.updateChart();
        ((ChartPanel) visualizationChartJPanel).setChart(dataVisualizationProcessor.getChart());
    }//GEN-LAST:event_runPreAlgJButtonActionPerformed

    private void runDecAlgJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runDecAlgJButtonActionPerformed
        decAlg.runAlgorithm(null);
    }//GEN-LAST:event_runDecAlgJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel algorithmJLabel;
    private javax.swing.JPanel algorithmOptionJPanel;
    private javax.swing.JComboBox assetJComboBox;
    private javax.swing.JLabel assetJLabel;
    private javax.swing.JComboBox charStyleJComboBox;
    private javax.swing.JLabel chartStyleJLabel;
    private javax.swing.JComboBox decAlgJComboBox;
    private javax.swing.JLabel decAlgJLabel;
    private javax.swing.JPanel decAlgParametersJPanel;
    private javax.swing.JLabel decAlgParametersjLabel;
    private javax.swing.JComboBox exchangeJComboBox;
    private javax.swing.JLabel exchangeJLabel;
    private javax.swing.JSpinner fromDateJSpinner;
    private javax.swing.JLabel fromJLabel;
    private javax.swing.JComboBox preAlgJComboBox;
    private javax.swing.JLabel preAlgJLabel;
    private javax.swing.JLabel preAlgParametersJLabel;
    private javax.swing.JPanel preAlgParametersJPanel;
    private javax.swing.JButton refreshDataJButton;
    private javax.swing.JButton runDecAlgJButton;
    private javax.swing.JButton runPreAlgJButton;
    private javax.swing.JSpinner startPredictionDateJSpinner;
    private javax.swing.JLabel startPredictionJLabel;
    private javax.swing.JPanel symbolOptionJPanel;
    private javax.swing.JLabel toDateJLabel;
    private javax.swing.JSpinner toDateJSpinner;
    private javax.swing.JPanel visualizationChartJPanel;
    // End of variables declaration//GEN-END:variables
    private DataVisualizationProcessor dataVisualizationProcessor;
    private ComboKeyHandler exchangeComboKeyHandler;
    private ComboKeyHandler assetComboKeyHandler;
    public static TreeMap<ExchangeEntity, Object[]> mappingExchangeID_Assets;
    private AbstractPredictAlgorithm preAlg;
    private AbstractDecisionAlgorithm decAlg;
	private ParameterJPanel parameterJPanel;

    private void initOtherComponents() {
        Calendar now = Calendar.getInstance();
        startPredictionDateJSpinner.setValue(now.getTime());
        toDateJSpinner.setValue(now.getTime());
        now.add(Calendar.MONTH, -6);
        fromDateJSpinner.setValue(now.getTime());

        if (mappingExchangeID_Assets == null) {
            mappingExchangeID_Assets = new TreeMap<ExchangeEntity, Object[]>();
            ArrayList<ExchangeEntity> listAllExchangeEntitys = (new ExchangeManager()).getAllExchanges();
            for (ExchangeEntity exchangeEntity : listAllExchangeEntitys) {
                ArrayList<AssetEntity> listAssets = (new AssetManager()).getAssetsByExchange(exchangeEntity.getExchangeID());
                mappingExchangeID_Assets.put(exchangeEntity, listAssets.toArray());
            }
        }

        charStyleJComboBox.setModel(new DefaultComboBoxModel(DataVisualizationProcessor.CHART_STYLES));

        exchangeJComboBox.setModel(new DefaultComboBoxModel(mappingExchangeID_Assets.keySet().toArray()));
        exchangeComboKeyHandler = new ComboKeyHandler(exchangeJComboBox);
        JTextField fieldExchange = (JTextField) exchangeJComboBox.getEditor().getEditorComponent();
        fieldExchange.addKeyListener(exchangeComboKeyHandler);

        assetJComboBox.setModel(new DefaultComboBoxModel(mappingExchangeID_Assets.get((ExchangeEntity) exchangeJComboBox.getSelectedItem())));
        assetComboKeyHandler = new ComboKeyHandler(assetJComboBox);
        JTextField fieldSymbol = (JTextField) assetJComboBox.getEditor().getEditorComponent();
        fieldSymbol.addKeyListener(assetComboKeyHandler);

        dataVisualizationProcessor = new DataVisualizationProcessor((AssetEntity) assetJComboBox.getSelectedItem(), (Date) fromDateJSpinner.getValue(), (Date) toDateJSpinner.getValue(), (ChartStyle) charStyleJComboBox.getSelectedItem());
        ((ChartPanel) visualizationChartJPanel).setChart(dataVisualizationProcessor.getChart());
        dataVisualizationProcessor.setStartPreDate((Date) startPredictionDateJSpinner.getValue());

        preAlg = business.algorithm.predictAlgorithm.Utility.getPredictionAlgorithm((String)preAlgJComboBox.getSelectedItem());
        decAlg = business.algorithm.decisionAlgorithm.Utility.getDecisionAlgorithm((String)decAlgJComboBox.getSelectedItem());

        parameterJPanel = new ParameterJPanel(preAlg.getParametersList());
		preAlgParametersJPanel.add(parameterJPanel);
        decAlgParametersJPanel.add(new ParameterJPanel(decAlg.getParametersList()));
    }
    
    public void debug(Object...os) {
    	JOptionPane.showMessageDialog(new JFrame(), Arrays.deepToString(os));
    }
}
